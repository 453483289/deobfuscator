{"name":"Java Deobfuscator","tagline":"","body":"### Java Deobfuscator\r\nJava Deobfuscator is the most advanced deobfuscator available, and it's free to use. It can remove transformations by some of the most popular obfuscators such as [Stringer](https://jfxstore.com/stringer) and [Zelix Klassmaster](http://zelix.com).\r\n\r\n### Usage\r\n\r\nJava Deobfuscator does not have a CLI yet. Instead, you'll need to clone the repository and manually execute the deobfuscator. Below is some sample code which will remove synthetic and bridge modifiers from every method and field.\r\n\r\n```java\r\npublic class SomeRandomDeobfuscator {\r\n    public static void main(String[] args) throws Throwable {\r\n        new Deobfuscator()\r\n            .withInput(new File(\"input.jar\"))\r\n            .withOutput(new File(\"output.jar\"))\r\n            .withClasspath(new File(\"path/to/rt.jar\"))\r\n            .withTransformer(Transformers.Generic.SYNTHETIC_BRIDGE)\r\n            .start();\r\n    }\r\n}\r\n```\r\n\r\n### Supported Obfuscators\r\n| Transformer | Description |\r\n| --- | --- |\r\n| Allatori.STRING_ENCRYPTION | Decrypts strings encrypted by Allatori |\r\n| DashO.STRING_ENCRYPTION | Decrypts strings encrypted by DashO |\r\n| Stringer.STRING_ENCRYPTION | Decrypts strings encrypted by Stringer |\r\n| Stringer.INVOKEDYNAMIC | Decrypts invokedynamic obfuscated calls by Stringer |\r\n| Stringer.REFLECTION_OBFUSCATION | Decrypts reflection obfuscated calls by Stringer |\r\n| General.SYNTHETIC_BRIDGE | Removes synthetic and bridge modifiers from all methods and fields |","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}